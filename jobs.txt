Queries:

1. Provide a SQL script that initializes the database for the Job Board scenario “CareerHub”.
A. Create database CareerHub;

2. Create tables for Companies, Jobs, Applicants and Applications.
A. Companies:

Create table companies(
companyID int not null,
companyName varchar(255),
location varchar(255)
);

insert into companies values
(111,’Hexaware’,’Chennai’),
(112,’IBM’,’Hyderabad’),
(113,’TCS’,’Banglore’),
(114,’Wipro’,’Hyderabad’),
(115,’Accenture’,’Chennai’),
(116,’Infosys’,’Hyderabad’);

select * from companies;
+-----------+-------------+-----------+
| companyID | companyName | location  |
+-----------+-------------+-----------+
|       111 | Hexaware    | Chennai   |
|       112 | IBM         | Hyderabad |
|       113 | TCS         | Banglore  |
|       114 | Wipro       | Hyderabad |
|       115 | Accenture   | Chennai   |
|       116 | Infosys     | Hyderabad |
+-----------+-------------+-----------+

Jobs:

Create table jobs(
JobID int not null,
CompanyID int not null,
JobTitle varchar(255),
JobDescription  varchar(255),
location varchar(255),
Salary  decimal(10,2),
JobType varchar(255),
PostedDate  datetime
);

Insert into jobs values(101,111,’software developer’,’Hexaware is an IT based company’,’Chennai’,300000,’Full-time’,’2024-03-10 11:00’),
(102 ,114,’Assistant-engineer’ ,’Wipro is a global information technology, consulting, and business process services company based in India’, ‘Hyderabad’,250000,’part-time’,’2024-05-19 09:00’),
(103 ,116,’Software-engineer’ ,’Infosys is a global information technology, consulting, and business process services company based in India’,’Hyderabad’,400000 ,’part-time’,’2024-06-16 09:00’),
(104 ,113,’fullstack developer’,’TCS is a multi national company’,’Banglore’,420000,’Remote’, 2024-02-10 09:00),
(105,115,’Data engineer’,’IBM is an IT based company’,’Hyderabad’,’Remote’,’ 2024-08-12 12:00’);

select * from jobs;
+-------+-----------+---------------------+--------------------------------------------------------------------------------------------------------------+-------------+-----------+---------------------+-----------+
| jobID | companyID | jobTitle            | jobDescription
                                 | jobLocation | jobType   | postedDate          | salary    |
+-------+-----------+---------------------+--------------------------------------------------------------------------------------------------------------+-------------+-----------+---------------------+-----------+
|   101 |       111 | Software developer  | Hexaware is an IT based company
                                 | Chennai     | Full-time | 2024-03-10 11:00:00 | 300000.00 |
|   102 |       114 | Assistant-engineer  | Wipro is a global information technology, consulting, and business process services company based in India   | Hyderabad   | part-time | 2024-05-19 09:00:00 | 250000.00 |
|   103 |       116 | Software-engineer   | Infosys is a global information technology, consulting, and business process services company based in India | Hyderabad   | part-time | 2024-06-16 09:00:00 | 400000.00 |
|   104 |       113 | Fullstack developer | TCS is a multi national company
                                 | Banglore    | Remote    | 2024-02-10 09:00:00 | 320000.00 |
|   105 |       115 | Data engineer       | IBM is an IT based company
                                 | Hyderabad   | Remote    | 2024-08-12 12:00:00 | 450000.00 |
+-------+-----------+---------------------+--------------------------------------------------------------------------------------------------------------+-------------+-----------+---------------------+-----------+

Applicants:

create table Applicants(
ApplicantID int not null,
firstName varchar(255),
lastName varchar(255),
);

insert into Applicants values
(10,'satwika','puppala'),
(20,'usha','mandala'),
(30,'manasa','adaka'),
(40,'mohini','ramineni'),
(50,'kavitha','raya');

select * from Applicants;
+-------------+-----------+----------+
| ApplicantID | firstName | lastName |
+-------------+-----------+----------+
|          10 | satwika   | puppala  |
|          20 | usha      | mandala  |
|          30 | manasa    | adaka    |
|          40 | mohini    | ramineni |
|          50 | kavitha   | raya     |
+-------------+-----------+----------+

Applications:

create table Applications(
ApplicationID int not null,
jobID int,
ApplicantID int,
ApplicationDate date
);

insert into Applications values
(21,101,10,'2024-03-10'),
(22,102,20,'2024-05-12'),
(23,103,30,'2024-06-07'),
(24,104,40,'2024-09-08'),
(25,105,50,'2024-10-12');

 select * from Applications;
+---------------+-------+-------------+-----------------+
| ApplicationID | jobID | ApplicantID | ApplicationDate |
+---------------+-------+-------------+-----------------+
|            21 |   101 |          10 | 2024-03-10      |
|            22 |   102 |          20 | 2024-05-12      |
|            23 |   103 |          30 | 2024-06-07      |
|            24 |   104 |          40 | 2024-09-08      |
|            25 |   105 |          50 | 2024-10-12      |
+---------------+-------+-------------+-----------------+

3. Define appropriate primary keys, foreign keys, and constraints.
A. primary keys: companyID, jobID, ApplicantID, ApplicationID
   foreign keys: companyID, jobID

4. Ensure the script handles potential errors, such as if the database or tables already exist.
A. create database CareerHub;
ERROR 1007 (HY000): Can't create database 'careerhub'; database exists
 create table jobs(jobID int);
ERROR 1050 (42S01): Table 'jobs' already exists

5. Write an SQL query to count the number of applications received for each job listing in the "Jobs" table. Display the job title and the corresponding application count. Ensure that it lists all jobs, even if they have no applications.
A. select jobs.jobID, jobs.jobTitle, count(Applications.ApplicationID) as application_count from jobs left join Applications on jobs.jobID = Applications.jobID group by jobs.jobID, jobs.jobTitle;
+-------+---------------------+-------------------+
| jobID | jobTitle            | application_count |
+-------+---------------------+-------------------+
|   101 | Software developer  |                 1 |
|   102 | Assistant-engineer  |                 1 |
|   103 | Software-engineer   |                 1 |
|   104 | Fullstack developer |                 1 |
|   105 | Data engineer       |                 1 |
+-------+---------------------+-------------------+

6. Develop an SQL query that retrieves job listings from the "Jobs" table within a specified salary range. Allow parameters for the minimum and maximum salary values. Display the job title, company name, location, and salary for each matching job.
A. select j.jobTitle, c.companyName, j.jobLocation, j.salary from jobs j join companies c on j.companyID = c.companyID where j.salary BETWEEN 250000 AND 400000;
+---------------------+-------------+-------------+-----------+
| jobTitle            | companyName | jobLocation | salary    |
+---------------------+-------------+-------------+-----------+
| Software developer  | Hexaware    | Chennai     | 300000.00 |
| Fullstack developer | TCS         | Banglore    | 320000.00 |
| Assistant-engineer  | Wipro       | Hyderabad   | 250000.00 |
| Software-engineer   | Infosys     | Hyderabad   | 400000.00 |
+---------------------+-------------+-------------+-----------+

7. Write an SQL query that retrieves the job application history for a specific applicant. Allow a parameter for the ApplicantID, and return a result set with the job titles, company names, and application dates for all the jobs the applicant has applied to.
A. select j.jobTitle, c.companyName, a.ApplicationDate from Applications a join jobs j on a.jobID = j.jobID join companies c on j.companyID = c.companyID where a.ApplicantID = 20;
+--------------------+-------------+-----------------+
| jobTitle           | companyName | ApplicationDate |
+--------------------+-------------+-----------------+
| Assistant-engineer | Wipro       | 2024-05-12      |
+--------------------+-------------+-----------------+

8. Create an SQL query that calculates and displays the average salary offered by all companies for job listings in the "Jobs" table. Ensure that the query filters out jobs with a salary of zero.
A.  select c.companyName, AVG(j.salary) as Average_salary from jobs j join companies c on j.companyID = c.companyID where j.salary > 0 group by c.companyName;
+-------------+----------------+
| companyName | Average_salary |
+-------------+----------------+
| Hexaware    |  300000.000000 |
| TCS         |  320000.000000 |
| Wipro       |  250000.000000 |
| Accenture   |  450000.000000 |
| Infosys     |  400000.000000 |
+-------------+----------------+

9. Write an SQL query to identify the company that has posted the most job listings. Display the company name along with the count of job listings they have posted. Handle ties if multiple
companies have the same maximum count.
A. WITH companyjobcounts as (select companyID, count(*) as job_count from jobs group by companyID) select c.companyName,cj.job_count from companyjobcounts cj join companies c on cj.companyID = c.companyID where cj.job_count = (select MAX(job_count) from companyjobcounts);
+-------------+-----------+
| companyName | job_count |
+-------------+-----------+
| Hexaware    |         1 |
| TCS         |         1 |
| Wipro       |         1 |
| Accenture   |         1 |
| Infosys     |         1 |
+-------------+-----------+

10. Find the applicants who have applied for positions in companies located in 'CityX' and have at least 3 years of experience. 
A. select distinct ap.ApplicantID, ap.firstName as ApplicantName from Applicants ap join Applications a on ap.ApplicantID = a.ApplicantID join jobs j on a.jobID = j.jobID join companies c on j.companyID = c.companyID where c.location = 'Hyderabad' AND ap.experience >= 3;
+-------------+---------------+
| ApplicantID | ApplicantName |
+-------------+---------------+
|          20 | usha          |
|          30 | manasa        |
+-------------+---------------+

11. Retrieve a list of distinct job titles with salaries between 60,000 and 80,000.
A. select distinct jobTitle from jobs where salary BETWEEN 60000 AND 80000;
+---------------------+
| jobTitle            |
+---------------------+
| Assistant-engineer  |
| Fullstack developer |
| Data engineer       |
+---------------------+

12. Find the jobs that have not received any applications.
A. select j.jobID, j.jobTitle, c.companyName from jobs j join companies c on j.companyID = c.companyID left join Applications a on j.jobID = a.jobID  where a.jobID  IS NULL;
+-------+---------------+-------------+
| jobID | jobTitle      | companyName |
+-------+---------------+-------------+
|   105 | Data engineer | Accenture   |
+-------+---------------+-------------+

13. Retrieve a list of job applicants along with the companies they have applied to and the positions they have applied for.
A. select ap.ApplicantID, c.companyName, j.jobTitle as position from Applications ap join jobs j on ap.jobID = j.jobID left join companies c on j.companyID = c.companyID;
+-------------+-------------+---------------------+
| ApplicantID | companyName | position            |
+-------------+-------------+---------------------+
|          10 | Hexaware    | Software developer  |
|          50 | Wipro       | Assistant-engineer  |
|          20 | Wipro       | Assistant-engineer  |
|          30 | Infosys     | Software-engineer   |
|          40 | TCS         | Fullstack developer |
+-------------+-------------+---------------------+

14. Retrieve a list of companies along with the count of jobs they have posted, even if they have not received any applications.
A.  select c.companyID, c.companyName, count(j.jobID) as jobcount from companies c left join jobs j on c.companyID = j.companyID left join Applications a on j.jobID = a.jobID group by c.companyID, c.companyName;
+-----------+-------------+----------+
| companyID | companyName | jobcount |
+-----------+-------------+----------+
|       111 | Hexaware    |        1 |
|       112 | IBM         |        0 |
|       113 | TCS         |        1 |
|       114 | Wipro       |        2 |
|       115 | Accenture   |        1 |
|       116 | Infosys     |        1 |
+-----------+-------------+----------+

15. List all applicants along with the companies and positions they have applied for, including those who have not applied.
A. select a.firstname,a.lastname, Coalesce(c.companyName,'Not Applied') as companyName, Coalesce(j.jobTitle,'Not Applied')as jobTitle from Applicants a left join Applications ap on a.ApplicantID = ap.ApplicantID left join jobs j on ap.jobID = j.jobID left join companies c on j.companyID = c.companyID;
+-----------+----------+-------------+---------------------+
| firstname | lastname | companyName | jobTitle            |
+-----------+----------+-------------+---------------------+
| satwika   | puppala  | Hexaware    | Software developer  |
| usha      | mandala  | Wipro       | Assistant-engineer  |
| manasa    | adaka    | Infosys     | Software-engineer   |
| mohini    | ramineni | TCS         | Fullstack developer |
| kavitha   | raya     | Wipro       | Assistant-engineer  |
+-----------+----------+-------------+---------------------+

16. Find companies that have posted jobs with a salary higher than the average salary of all jobs.
A. select c.companyID, c.companyName from companies c join jobs j on c.companyID = j.companyID where j.salary > (select avg(j.salary) from jobs j);
+-----------+-------------+
| companyID | companyName |
+-----------+-------------+
|       113 | TCS         |
|       114 | Wipro       |
|       115 | Accenture   |
+-----------+-------------+

17. Display a list of applicants with their names and a concatenated string of their city and state.
A. select a.firstName as ApplicantName, CONCAT(c.location,',',c.state)as city_state from Applicants a right join Applications ap on a.ApplicantID = ap.ApplicantID right join jobs j on j.jobID = ap.jobID right join companies c on c.companyID = j.companyID;
+---------------+---------------------+
| ApplicantName | city_state          |
+---------------+---------------------+
| satwika       | Chennai,Tamilnadu   |
| Gill          | Hyderabad,Telangana |
| mohini        | Banglore,karnataka  |
| usha          | Hyderabad,Telangana |
| kavitha       | Hyderabad,Telangana |
| Vani          | Chennai,Tamilnadu   |
| manasa        | Hyderabad,Telangana |
+---------------+---------------------+

18. Retrieve a list of jobs with titles containing either 'Developer' or 'Engineer'.
A.  select jobID, jobTitle from jobs where jobTitle like '%developer%' OR jobTitle like '%engineer%';
+-------+---------------------+
| jobID | jobTitle            |
+-------+---------------------+
|   101 | Software developer  |
|   102 | Assistant-engineer  |
|   103 | Software-engineer   |
|   104 | Fullstack developer |
|   105 | Data engineer       |
+-------+---------------------+

19. Retrieve a list of applicants and the jobs they have applied for, including those who have not applied and jobs without applicants.
A.  select ap.*,c.companyName,j.jobTitle from Applicants ap left join Applications a on ap.ApplicantID = a.ApplicantID left join jobs j on a.jobID = j.jobID left join companies c on c.companyID = j.companyID;
+-------------+-----------+----------+------------+-------------+---------------------+
| ApplicantID | firstName | lastName | experience | companyName | jobTitle            |
+-------------+-----------+----------+------------+-------------+---------------------+
|          10 | satwika   | puppala  |          3 | Hexaware    | Software developer  |
|          20 | usha      | mandala  |          4 | Wipro       | Assistant-engineer  |
|          30 | manasa    | adaka    |          6 | Infosys     | Software-engineer   |
|          40 | mohini    | ramineni |          4 | TCS         | Fullstack developer |
|          50 | kavitha   | raya     |          9 | Wipro       | Assistant-engineer  |
+-------------+-----------+----------+------------+-------------+---------------------+

20. List all combinations of applicants and companies where the company is in a specific city and the applicant has more than 2 years of experience. For example: city=Chennai.
A. select a.firstName as ApplicantName, c.companyName,c.location as company_location, a.experience from Applicants a right join Applications ap on a.ApplicantID = ap.ApplicantID right join jobs j on j.jobID = ap.jobID join companies c on c.companyID = j.companyID where c.location = 'Chennai' and a.experience > 2;
+---------------+-------------+------------------+------------+
| ApplicantName | companyName | company_location | experience |
+---------------+-------------+------------------+------------+
| satwika       | Hexaware    | Chennai          |          3 |
+---------------+-------------+------------------+------------+


